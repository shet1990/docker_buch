version: "3"

services:

    web:
        image: nginx:1.19.2-alpine
        container_name: nginx-back
        volumes:
            - ./docker/nginx/default-back.conf:/etc/nginx/conf.d/default.conf
            - ${APP_PATH_BACK}:${APP_PATH_CONTAINER}
        ports:
            - 8080:80
        restart: always
        working_dir: ${APP_PATH_CONTAINER}
        depends_on:
            - php
            - db

    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: app-back
        volumes:
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ${APP_PATH_BACK}:${APP_PATH_CONTAINER}
        working_dir: ${APP_PATH_CONTAINER}

    db:
        image: postgres:11-alpine
        restart: always
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - ${DB_PATH_HOST}:/var/lib/postgresql/data/pgdata
        ports:
            - 5432:5432

    adminer:
        image: adminer
        restart: always
        ports:
            - 6080:8080

    composer:
        image: composer:1.10
        volumes:
            - ${APP_PATH_BACK}:${APP_PATH_CONTAINER}
        working_dir: ${APP_PATH_CONTAINER}
        command: composer install

    node:
        build:
            context: .
            dockerfile: ./docker/node/Dockerfile
        container_name: app-front
        ports:
            - 8081:80
        depends_on:
            - web
